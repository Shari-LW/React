{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/components/Book.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Book = props => {\n  const info = props.book.volumeInfo;\n  const {\n    volumeInfo: {\n      title,\n      authors,\n      description,\n      imageLinks: {\n        thumbnail\n      }\n    }\n  } = props.book;\n\n  const renderAmount = () => {\n    if (props.book.saleInfo && props.book.saleInfo.listPrice && props.book.saleInfo.listPrice.amount) {\n      return \"£\" + props.book.saleInfo.listPrice.amount;\n    }\n\n    return \"No price available\";\n  }; // const renderAuthors = () => {\n  //   if (authors.length === 1) {\n  //     return authors;\n  //   }\n  //   return authors.map((author) => author + \", \");\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" by \", authors.length === 1 ? [0] : authors.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" by \", renderAuthors(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: renderAmount()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: [\" \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: () => props.addBook(title),\n      children: [\" \", \"Add +\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Book;\nBook.propTypes = {\n  book: PropTypes.shape({\n    volumeInfo: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      authors: PropTypes.array.isRequired,\n      description: PropTypes.string.isRequired,\n      imageLinks: PropTypes.shape({\n        thumbnail: PropTypes.string.isRequired\n      })\n    }),\n    saleInfo: PropTypes.shape({\n      listPrice: PropTypes.shape({\n        amount: PropTypes.number.isRequired\n      }).isRequired\n    })\n  })\n};\nBook.defaultProps = {\n  title: \"This is title\"\n};\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/components/Book.js"],"names":["React","PropTypes","Book","props","info","book","volumeInfo","title","authors","description","imageLinks","thumbnail","renderAmount","saleInfo","listPrice","amount","length","join","renderAuthors","addBook","propTypes","shape","string","isRequired","array","number","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,UAAxB;AAEA,QAAM;AACJA,IAAAA,UAAU,EAAE;AACVC,MAAAA,KADU;AAEVC,MAAAA,OAFU;AAGVC,MAAAA,WAHU;AAIVC,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAJF;AADR,MAOFR,KAAK,CAACE,IAPV;;AASA,QAAMO,YAAY,GAAG,MAAM;AACzB,QACET,KAAK,CAACE,IAAN,CAAWQ,QAAX,IACAV,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SADpB,IAEAX,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SAApB,CAA8BC,MAHhC,EAIE;AACA,aAAO,MAAMZ,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SAApB,CAA8BC,MAA3C;AACD;;AACD,WAAO,oBAAP;AACD,GATD,CAZsB,CAuBtB;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEJ,SAAV;AAAqB,MAAA,GAAG,EAAEJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,yBAASC,OAAO,CAACQ,MAAR,KAAmB,CAAnB,GAAuB,CAAC,CAAD,CAAvB,GAA6BR,OAAO,CAACS,IAAR,CAAa,IAAb,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,yBAAQC,aAAa,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAKN,YAAY;AAAjB;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,sBAA6BH,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,MAAMN,KAAK,CAACgB,OAAN,CAAcZ,KAAd,CAA9C;AAAA,iBACG,GADH,WAEQ,GAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA5CD;;KAAML,I;AA8CNA,IAAI,CAACkB,SAAL,GAAiB;AACff,EAAAA,IAAI,EAAEJ,SAAS,CAACoB,KAAV,CAAgB;AACpBf,IAAAA,UAAU,EAAEL,SAAS,CAACoB,KAAV,CAAgB;AAC1Bd,MAAAA,KAAK,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADE;AAE1Bf,MAAAA,OAAO,EAAEP,SAAS,CAACuB,KAAV,CAAgBD,UAFC;AAG1Bd,MAAAA,WAAW,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UAHJ;AAI1Bb,MAAAA,UAAU,EAAET,SAAS,CAACoB,KAAV,CAAgB;AAC1BV,QAAAA,SAAS,EAAEV,SAAS,CAACqB,MAAV,CAAiBC;AADF,OAAhB;AAJc,KAAhB,CADQ;AASpBV,IAAAA,QAAQ,EAAEZ,SAAS,CAACoB,KAAV,CAAgB;AACxBP,MAAAA,SAAS,EAAEb,SAAS,CAACoB,KAAV,CAAgB;AACzBN,QAAAA,MAAM,EAAEd,SAAS,CAACwB,MAAV,CAAiBF;AADA,OAAhB,EAERA;AAHqB,KAAhB;AATU,GAAhB;AADS,CAAjB;AAkBArB,IAAI,CAACwB,YAAL,GAAoB;AAClBnB,EAAAA,KAAK,EAAE;AADW,CAApB;AAIA,eAAeL,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Book = (props) => {\n  const info = props.book.volumeInfo;\n\n  const {\n    volumeInfo: {\n      title,\n      authors,\n      description,\n      imageLinks: { thumbnail },\n    },\n  } = props.book;\n\n  const renderAmount = () => {\n    if (\n      props.book.saleInfo &&\n      props.book.saleInfo.listPrice &&\n      props.book.saleInfo.listPrice.amount\n    ) {\n      return \"£\" + props.book.saleInfo.listPrice.amount;\n    }\n    return \"No price available\";\n  };\n\n  // const renderAuthors = () => {\n  //   if (authors.length === 1) {\n  //     return authors;\n  //   }\n  //   return authors.map((author) => author + \", \");\n  // };\n\n  return (\n    <div className=\"book\">\n      <img src={thumbnail} alt={title} />\n      <h2>{title}</h2>\n      <h3> by {authors.length === 1 ? [0] : authors.join(\", \")}</h3>\n      <p> by {renderAuthors()} </p>\n      <h4>{renderAmount()}</h4>\n      <p className=\"description\"> {description}</p>\n      <button className=\"add-button\" onClick={() => props.addBook(title)}>\n        {\" \"}\n        Add +{\" \"}\n      </button>\n    </div>\n  );\n};\n\nBook.propTypes = {\n  book: PropTypes.shape({\n    volumeInfo: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      authors: PropTypes.array.isRequired,\n      description: PropTypes.string.isRequired,\n      imageLinks: PropTypes.shape({\n        thumbnail: PropTypes.string.isRequired,\n      }),\n    }),\n    saleInfo: PropTypes.shape({\n      listPrice: PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n      }).isRequired,\n    }),\n  }),\n};\n\nBook.defaultProps = {\n  title: \"This is title\",\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}