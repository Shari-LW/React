{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/components/Book.js\";\nimport React from \"react\";\n\nconst Book = props => {\n  // let {\n  //   id,\n  //   volumeInfo: { title, authors, description },\n  //   saleInfo: {\n  //     listPrice: { amount },\n  //   },\n  // } = book;\n  const info = props.book.volumeInfo;\n  const {\n    volumeInfo: {\n      title,\n      authors,\n      description,\n      imageLinks: {\n        thumbnail\n      }\n    }\n  } = props.book;\n\n  const renderAmount = () => {\n    if (props.book.saleInfo && props.book.saleInfo.listPrice && props.book.saleInfo.listPrice.amount) {\n      return \"£\" + props.book.saleInfo.listPrice.amount;\n    }\n  };\n\n  const renderAuthors = () => {\n    if (authors.length === 1) {\n      return authors;\n    }\n\n    return authors.map(author => author + \",\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" - \", renderAuthors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: renderAmount()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Book;\nexport default Book;\n\nvar _c;\n\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"sources":["/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/components/Book.js"],"names":["React","Book","props","info","book","volumeInfo","title","authors","description","imageLinks","thumbnail","renderAmount","saleInfo","listPrice","amount","renderAuthors","length","map","author"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,UAAxB;AAEA,QAAM;AACJA,IAAAA,UAAU,EAAE;AACVC,MAAAA,KADU;AAEVC,MAAAA,OAFU;AAGVC,MAAAA,WAHU;AAIVC,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAJF;AADR,MAOFR,KAAK,CAACE,IAPV;;AASA,QAAMO,YAAY,GAAG,MAAM;AACzB,QACET,KAAK,CAACE,IAAN,CAAWQ,QAAX,IACAV,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SADpB,IAEAX,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SAApB,CAA8BC,MAHhC,EAIE;AACA,aAAO,MAAMZ,KAAK,CAACE,IAAN,CAAWQ,QAAX,CAAoBC,SAApB,CAA8BC,MAA3C;AACD;AACF,GARD;;AAUA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIR,OAAO,CAACS,MAAR,KAAmB,CAAvB,EAA0B;AACxB,aAAOT,OAAP;AACD;;AACD,WAAOA,OAAO,CAACU,GAAR,CAAaC,MAAD,IAAYA,MAAM,GAAG,GAAjC,CAAP;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAER;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACG,GADH,EAEGJ,KAFH,SAEaS,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,gBAAIJ,YAAY;AAAhB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,sBAAKH,WAAL;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhDD;;KAAMP,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nconst Book = (props) => {\n  // let {\n  //   id,\n  //   volumeInfo: { title, authors, description },\n  //   saleInfo: {\n  //     listPrice: { amount },\n  //   },\n  // } = book;\n\n  const info = props.book.volumeInfo;\n\n  const {\n    volumeInfo: {\n      title,\n      authors,\n      description,\n      imageLinks: { thumbnail },\n    },\n  } = props.book;\n\n  const renderAmount = () => {\n    if (\n      props.book.saleInfo &&\n      props.book.saleInfo.listPrice &&\n      props.book.saleInfo.listPrice.amount\n    ) {\n      return \"£\" + props.book.saleInfo.listPrice.amount;\n    }\n  };\n\n  const renderAuthors = () => {\n    if (authors.length === 1) {\n      return authors;\n    }\n    return authors.map((author) => author + \",\");\n  };\n\n  return (\n    <div>\n      <img src={thumbnail} />\n      <h2>\n        {\" \"}\n        {title} - {renderAuthors}\n      </h2>\n      <p>{renderAmount()}</p>\n      <p> {description}</p>\n    </div>\n  );\n};\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}