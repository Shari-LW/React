{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Book from \"./components/Book\";\nimport Header from \"./components/Header\";\nimport BookList from \"./components/BookList\";\nimport About from \"./pages/About\";\nimport Search from \"./components/Search\";\nimport data from \"./models/books.json\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = props => {\n  _s();\n\n  const [books, setBooks] = useState(data);\n\n  async function findBooks(term) {\n    const results = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${term}&filter=paid-ebooks&print- type=books&projection=lite`).then(res => res.json());\n\n    if (!results.error) {\n      setBooks(results.items);\n    }\n  }\n\n  function addBook(title) {\n    console.log(`The Book ${title} was clicked`);\n    const newBooks = books.filter(book => {\n      if (title === book.volumeInfo.title) {\n        return false;\n      }\n\n      return true;\n    });\n    setBooks(newBooks);\n  }\n\n  if (books.length === 0) {\n    return \"No books found\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          findBooks: findBooks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BookList, {\n          books: books,\n          addBook: addBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/bookcase\",\n      render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Next page \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/about\",\n      render: () => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TG/Op7G22Zt/QQDN+0UVtuUrXV0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shari/Documents/Coding/Black Codher/black-codher-react1/mybookcase/src/App.js"],"names":["React","useState","Book","Header","BookList","About","Search","data","BrowserRouter","Router","Route","App","props","books","setBooks","findBooks","term","results","fetch","then","res","json","error","items","addBook","title","console","log","newBooks","filter","book","volumeInfo","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Book from \"./components/Book\";\nimport Header from \"./components/Header\";\nimport BookList from \"./components/BookList\";\nimport About from \"./pages/About\";\nimport Search from \"./components/Search\";\n\nimport data from \"./models/books.json\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nconst App = (props) => {\n  const [books, setBooks] = useState(data);\n\n  async function findBooks(term) {\n    const results = await fetch(\n      `https://www.googleapis.com/books/v1/volumes?q=${term}&filter=paid-ebooks&print- type=books&projection=lite`\n    ).then((res) => res.json());\n    if (!results.error) {\n      setBooks(results.items);\n    }\n  }\n\n  function addBook(title) {\n    console.log(`The Book ${title} was clicked`);\n    const newBooks = books.filter((book) => {\n      if (title === book.volumeInfo.title) {\n        return false;\n      }\n      return true;\n    });\n\n    setBooks(newBooks);\n  }\n\n  if (books.length === 0) {\n    return \"No books found\";\n  }\n\n  return (\n    <Router>\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <React.Fragment>\n            <Header />\n            <Search findBooks={findBooks} />\n            <Search />\n            <BookList books={books} addBook={addBook} />\n          </React.Fragment>\n        )}\n      />\n      <Route\n        exact\n        path=\"/bookcase\"\n        render={() => (\n          <React.Fragment>\n            <Header />\n            <p> Next page </p>\n          </React.Fragment>\n        )}\n      />\n\n      <Route\n        exact\n        path=\"/about\"\n        render={() => (\n          <React.Fragment>\n            <Header />\n            <About />\n          </React.Fragment>\n        )}\n      />\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}